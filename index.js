// ---------------------
// –ó–∞–≤–¥–∞–Ω–Ω—è 1: Promise.all
// ---------------------

// –§—É–Ω–∫—Ü—ñ—è, —è–∫–∞ —Å—Ç–≤–æ—Ä—é—î –ø—Ä–æ–º—ñ—Å —ñ–∑ –∑–∞—Ç—Ä–∏–º–∫–æ—é
function delayedPromise(value, delay) {
  return new Promise((resolve) => {
    setTimeout(() => {
      resolve(value);
    }, delay);
  });
}

// –ú–∞—Å–∏–≤ —ñ–∑ 5 –ø—Ä–æ–º—ñ—Å—ñ–≤ –∑ —Ä—ñ–∑–Ω–∏–º–∏ –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏ —Ç–∞ –∑–∞—Ç—Ä–∏–º–∫–∞–º–∏
const promises = [
  delayedPromise("–ü—Ä–æ–º—ñ—Å 1", 1000),
  delayedPromise("–ü—Ä–æ–º—ñ—Å 2", 3000),
  delayedPromise("–ü—Ä–æ–º—ñ—Å 3", 2000),
  delayedPromise("–ü—Ä–æ–º—ñ—Å 4", 4000),
  delayedPromise("–ü—Ä–æ–º—ñ—Å 5", 1500),
];

// –í–∏–∫–æ–Ω–∞–Ω–Ω—è –≤—Å—ñ—Ö –ø—Ä–æ–º—ñ—Å—ñ–≤ –æ–¥–Ω–æ—á–∞—Å–Ω–æ
Promise.all(promises)
  .then((results) => {
    console.log("‚úÖ –ó–∞–≤–¥–∞–Ω–Ω—è 1: –£—Å—ñ –ø—Ä–æ–º—ñ—Å–∏ –≤–∏–∫–æ–Ω–∞–Ω–æ:");
    console.log(results);
  })
  .catch((error) => {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ —É –ó–∞–≤–¥–∞–Ω–Ω—ñ 1:", error);
  });

// ---------------------
// –ó–∞–≤–¥–∞–Ω–Ω—è 2: Promise.race
// ---------------------

// –§—É–Ω–∫—Ü—ñ—è, —è–∫–∞ —Å—Ç–≤–æ—Ä—é—î –ø—Ä–æ–º—ñ—Å –∑ –≤–∏–ø–∞–¥–∫–æ–≤–æ—é –∑–∞—Ç—Ä–∏–º–∫–æ—é
function randomDelay(value) {
  const delay = Math.floor(Math.random() * 4000) + 1000; // –≤—ñ–¥ 1000 –¥–æ 5000 –º—Å
  return new Promise((resolve) => {
    setTimeout(() => {
      resolve(`${value} (–∑–∞—Ç—Ä–∏–º–∫–∞: ${delay} –º—Å)`);
    }, delay);
  });
}

// –ú–∞—Å–∏–≤ —ñ–∑ 5 –ø—Ä–æ–º—ñ—Å—ñ–≤ –∑ —Ä—ñ–∑–Ω–∏–º–∏ –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏
const racePromises = [
  randomDelay("–ü—Ä–æ–º—ñ—Å A"),
  randomDelay("–ü—Ä–æ–º—ñ—Å B"),
  randomDelay("–ü—Ä–æ–º—ñ—Å C"),
  randomDelay("–ü—Ä–æ–º—ñ—Å D"),
  randomDelay("–ü—Ä–æ–º—ñ—Å E"),
];

// –í–∏–∫–æ–Ω–∞–Ω–Ω—è –≤—Å—ñ—Ö –ø—Ä–æ–º—ñ—Å—ñ–≤, –∞–ª–µ –±–µ—Ä–µ–º–æ –Ω–∞–π—à–≤–∏–¥—à–∏–π
Promise.race(racePromises)
  .then((result) => {
    console.log("üöÄ –ó–∞–≤–¥–∞–Ω–Ω—è 2: –ù–∞–π—à–≤–∏–¥—à–∏–π –ø—Ä–æ–º—ñ—Å –≤–∏–∫–æ–Ω–∞–≤—Å—è:");
    console.log(result);
  })
  .catch((error) => {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ —É –ó–∞–≤–¥–∞–Ω–Ω—ñ 2:", error);
  });
